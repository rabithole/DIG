<div class="main-title">
	<h1>{{ section.settings.title }}</h1>
  	<h4 id='total'></h4>
</div>

<div class="kit">
  {% for block in section.blocks %}
  	{% assign sku = block.settings.product_sku %}
  	{% assign prod = block.settings.product %}
  
  	<div class="product-container">
	  	<section class="title-description">
	  		<h2 class="prod-title">{{ block.settings.title }}</h2>
	  		<p>{{ block.settings.description | truncate: 352 }}</p>
	  	</section>

	  	<section class="eachProduct">
		  	{% for option in prod.variants %}
		          {% if option.sku == sku %}
          			{% if prod.has_only_default_variant %}
          				<img src='{{ block.settings.image | img_url }}' style='width: 200px;'>
					{% else %}
           				<img src='{{ option.image | img_url }}' style='width: 200px;'>                                                                                   
          			{% endif %}

          			{% capture id %}
          				{{ option.id }}
          			{% endcapture %}
		              <h6>{{ id }}</h6>

		              <h3 style="" id='{{ option.price }}' class='product-price'>{{ option.price | money }}</h3>
          				{% if option.title != 'Default Title' %}
		              		<h2 class='product-model' id='{{ option.id }}'>{{ option.title }}</h2>
          				{% endif %}
		          {% endif %}
		  	{% endfor %}
		</section> 
	</div>
  {% endfor %}

  <div class='cart-button'>
    <form method="post" action="/cart/add" id='kit-form'>
      <input type="hidden" name="id" value='1' id='value'/>
      {% comment %}
      <input min="1" type="number" id="quantity" name="quantity" value="1"/>
      {% endcomment %}
      <label id='discount-label'>Quantity: </label>
      <select name='quantity' type='number' id='quantity' class="discount-select-page">
        <option>1</option>
        <option>2</option>
        <option>3</option>
        <option>4</option>
        <option>5</option>
        <option>6</option>
      </select>
      <section type="submit" onclick="idSubmit()" class="discount-page-button" data-action="add-to-cart">Add To Cart</section>
    </form> 
  </div>
</div>

<script>
	
let formBuildKit = document.getElementById('kit-form');
	let formValue = document.getElementById('value');
	let id = document.getElementsByClassName('product-model'); // id of each product placed in the product title h2 element.
	let idArr = [];

		// Add each product id to the id array. ( idArr )
	for(let i = 0; i < id.length; i++) {
		idArr.push(id[i].id );
	}

	console.log('ID Array:--', idArr)
	let prodData = idArr.map(id => {
		return {
			quantity: 1,
			id: id
		}
	})

	let data = {
		items: prodData
	}

	console.log('data: -- ', data)

/*
	function idSubmit() {
			console.log('idSubmit function')
			for(let i = 0; i < idArr.length; i++) {
				formValue.value = idArr[i];
				formBuildKit.submit();
				console.log('form submitted', idArr[i])
				e.preventDefault();
			}
	}
*/

function idSubmit() {
	console.log('submit')
	fetch('/cart/add.js', {
		body: JSON.stringify(data),
		credentials: 'same-origin',
		headers: {
			'Content-Type': 'application/json',
			'X-Requested-With': 'XMLHttpRequest'
		},
		method: 'POST'
	}).then((response) => {
		return response.json();
	}).then((json) => {
		console.log('products', json)
	}).catch((err) => {
		console.error(err)
	});
}
	
</script>

{% schema %}
	{
		"name": "Multiple Products",
		"tag": "div",
		"settings": [
			{	
				"id": "title",
				"type": "text",
				"label": "Page Title"
			}
		],
		"blocks": [
			{
			"type": "text",
			"name": "product",
  			"settings": [
				{	
					"id": "title",
					"type": "text",
					"label": "title"
				},
				{
					"type": "text",
					"id": "product_sku",
					"label": "Product Sku"
				},
				{
					"type": "product",
					"id": "product",
					"label": "Product"
				},
				{
					"id": "description",
					"type": "text",
					"label": "Product Description",
					"info": "Limit 350 charancters"
				},
				{
      				"type": "image_picker",
      				"id": "image",
      				"label": "Use when there is only one variant for a product!",
      				"info": "1200 x 800px .jpg recommended"
    			}
  					]
				}
		],
		"presets": [
			{
				"category": "Product",
				"name": "Multiple Products",
				"settings": {}
			}
		]
	}
{% endschema %}

{% javascript %}
		// Gathering prices of each product and totalling in the kit headline.

  let collection  = document.getElementsByTagName('h3');
  let price = 0;

  console.log('Collection:', collection);

  for(let i = 0; i < collection.length; i++) {
  	price = price + Number(collection[i].id);
  	/*
  	console.log('InnerHTML: ', collection[i].innerHTML);
  	price = 'Total: ' + '$' + (Number(collection[i].id) / 100).toFixed(2);
  	*/
  }
  		// console.log( 'collection', collection, price );
	document.getElementById("total").innerHTML = 'Total: ' + '$' + (Number(price) / 100).toFixed(2);



		
{% endjavascript %}



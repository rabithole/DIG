<div class="main-title">
	<h1>{{ section.settings.title }}</h1>
</div>

<div class='top-bottom'>
	{{ section.settings.top-of-page }}
</div>


<!-- Top of kit page -->
<div class="kit" id=0>
	<h4 id=50 class="kitTotal"></h4>

	<!-- outside for loop -->
  {% for block in section.blocks %}
  		{% assign sku = block.settings.product_sku %}
  		{% assign prod = block.settings.product %}
  
		<div class="product-container">
	  	<section class="title-description">
	  		<h2 class="prod-title">{{ block.settings.title }}</h2>
	  		<p>{{ block.settings.description | truncate: 352 }}</p>
	  	</section>

	  	<section class="eachProduct">
		  	{% for option in prod.variants %}
          {% if option.sku == sku %}
      			{% if prod.has_only_default_variant %}
      				<img src='{{ block.settings.image | img_url }}' style='width: 200px;'>
						{% else %}
							<img src='{{ option.image | img_url }}' class="product-image">                                                                          
    			{% endif %}
            	<h3 style="" id='{{ option.price }}' data-price='option.price' class='product-price'>{{ option.price | money }}</h3>
    				{% if option.title != 'Default Title' %}
            		<h2 class='product-model' id='{{ option.id }}'>{{ option.title }}</h2>
    				{% endif %}
          {% endif %}
		  	{% endfor %}

				<div class="dropDown">
		  		<label for='variants'>Choose a hose</label>
		  		<select name="variants" id="variants">
		  			<option value= "{{ block.settings.variant_sku }}">{{ block.settings.variant_sku }}</option>
						<option value="{{ block.settings.product_sku }}">{{ block.settings.product_sku }}</option>
		  		</select>
		  	</div>

			</section> 
		</div>
  {% endfor %}
  <!-- end of outside for loop -->

  <div class='cart-button'>
      <button class="discount-page-button" >Add To Cart</button> 
  </div>
</div>
<!-- bottom of kit section -->



<div class='top-bottom'>
	{{ section.settings.bottom-of-page }}
</div>

<script>

var changeProduct = function(e) {
	var product = this.querySelectorAll('select');
	var index = product[0].value;

	console.log('This--- ', this, 'Index--- ', index)
}

var addToCart = function(e) {
	var products = this.parentElement.querySelectorAll('H2.product-model')
	var productsData = [];

	products.forEach( function(product) {
	    productsData.push({
	        quantity: 1,
	        id: product.id
	    })
	})

	var data = {
	    items: productsData
	}

	fetch('/cart/add.js', {
	    body: JSON.stringify(data),
	    credentials: 'same-origin',
	    headers: {
	        'Content-Type': 'application/json'
	    },
	    method: 'POST'
	}).then((response) => {
	    response.json();
	    window.location.reload();
	}).then(data => {
	    console.log("Success", data)
	}).catch((err) => {
	    console.error(err)
	});
}

window.addEventListener('load', function(e) {
		console.log('event listener');
    Array.prototype.forEach.call(
        document.getElementsByClassName('dropDown'), function(element) {
            element.addEventListener('change', changeProduct)
        }
    );
});

window.addEventListener('load', function(e) {
    Array.prototype.forEach.call(
        document.getElementsByClassName('cart-button'), function(element) {
            element.addEventListener('click', addToCart)
        }
    );
});

    var kitID = document.getElementsByClassName('kit'); // used to set dynamic kit id
    var kitTotal = document.getElementsByTagName('h4'); // where total kit price will display
    var h3Tags = document.getElementsByTagName('h3'); // prices per product
    var price = 0;  
    var titlePriceId = 0; // Sets an arbitrary id for total section to match to each kit section
    var kitPriceArray = [];

    // Sets a unique id for each kit on the page.
    for(var i = 0; i < kitID.length; i++){
        kitID[i].id = i;
        // console.log(Number(kitTotal[i].id) + i)
    }

    // Sets unique id for each kit total title.
    for(var j = 0; j < kitTotal.length; j++){
        var kitTotalId = kitTotal[j].id = 50 + j;
        // console.log('Kit Total in for loop', kitTotal)
    }



    // Gathering prices of each product and totalling in the kit headline.
  for(var k = 0; k < h3Tags.length; k++) {

    // grabs the 'KIT SECTION ID' from the h3Tags of h3 tags of product prices
    // h3 parent nodes to get to section id's
    var h3TagsID = Number(h3Tags[k].parentNode.parentNode.parentNode.id); 

    // console.log('First in for loop', 'h3TagsID', h3TagsID, 'titlePriceId', titlePriceId)
    
    // grabs individual product prices from list of h3 tags containing product prices.
    // h3 tags id's contain individual product prices
    var productPrice = Number(h3Tags[k].id);

    if(h3TagsID == titlePriceId){
        kitPriceArray.push(productPrice);
    }else{
        titlePriceId++
        kitPriceArray = [];
        kitPriceArray.push(productPrice);
    }

    var sum = kitPriceArray.reduce(function (x,y){
        return x + y;
    }, 0)
    
    document.getElementById(kitTotalId).innerHTML = 'Total: ' + '$' + (Number(sum) / 100).toFixed(2);
  }
</script>

{% schema %}
	{
		"name": "Build A Kit",
		"tag": "div",
		"settings": [
			{	
				"id": "title",
				"type": "text",
				"label": "Kit Title"
			},
			{
				"type": "html",
				"label": "Kit details",
				"id": "top-of-page"
			},
			{
				"type": "html",
				"label": "More info",
				"id": "bottom-of-page"
			},
			{
				"type": "link_list",
				"id": "other-kits",
				"label": "Links to other kits"
			}
		],
		"blocks": [
			{
			"type": "text",
			"name": "product",
  			"settings": [
				{	
					"id": "title",
					"type": "text",
					"label": "Kit Title"
				},
				{
					"type": "text",
					"id": "variant_sku",
					"label": "Variant Sku"
				},
				{
					"type": "text",
					"id": "product_sku",
					"label": "Product Sku"
				},
				{
					"type": "product",
					"id": "product",
					"label": "Product"
				},
				{
					"id": "description",
					"type": "text",
					"label": "Product Description",
					"info": "Limit 350 charancters"
				},
				{
      				"type": "image_picker",
      				"id": "image",
      				"label": "Use when there is only one variant for a product!",
      				"info": "1200 x 800px .jpg recommended"
    			}
  					]
				}
		],
		"presets": [
			{
				"category": "Product",
				"name": "Build A Kit",
				"settings": {}
			}
		]
	}
{% endschema %}

{% javascript %}
		



		
{% endjavascript %}


